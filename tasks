#. Поиск уникальных элементов в строке
Этот фрагмент можно использовать для поиска уникальных элементов в строке с помощью свойства, что все элементы в наборе уникальны.
my_string = "aavvccccddddeee"

# преобразование строки в набор
temp_set = set(my_string)

# сшивание набора в строку с помощью join
new_string = ''.join(temp_set)

print(new_string)


# Задание:
# Напишите, какой результат будет выведен в консоль?

class A:
  def a(self):
    return "a"
    
class B:
  def a(self):
    return "b"
  
class C(A, B):
  pass

c = C()
print(c.a())


# Напишите функцию, которая удаляет заданную букву из всех строк в массиве.
# Тип данных в массиве не регламентирован

def remove_char(char: str, array: list):
    pass

array = ["class", "collobarate", "click", "hope", "black", "free", 0, []]

assert remove_char("s", array) == ['cla', 'collobarate', 'click', 'hope', 'black', 'free', 0, []]
assert remove_char("c", array) == ['lass', 'ollobarate', 'lik', 'hope', 'blak', 'free', 0, []]
assert remove_char("a", array) == ['clss', 'collobrte', 'click', 'hope', 'blck', 'free', 0, []]
assert remove_char("l", array) == ['cass', 'coobarate', 'cick', 'hope', 'back', 'free', 0, []]


# Задание
# Напишите функцию, которая принимает список чисел, и возводит в квадрат только четные числа из этого списка, результат возвращается

def square_even(data: list):
    pass

numbers = list(range(10))
assert square_even(numbers) == [0, 1, 4, 3, 16, 5, 36, 7, 64, 9]


# Задание:
# Напишите функцию, которая будет принимать массив целых цисел от 1 до 100, 
в котором одно из чисел пропущено, а функция должна возвращать число, пропещуенное в этом массиве. Массив не сортирован.

def get_missing(data: list):
    pass

data = list(range(1, 101))
del data[56]
assert get_missing(data) == 57

#
Реализация контекстного менеджера (например, для открытия файла или доступа к БД)

#     
  a = [1,2,3,4,5,6]
  print(a[2:])
  print(a[::2])
  print a[::-1]
    
  a = range(1,7)
  c = [x**2 for x in range(10)]
  print ([x for x in c if x % 2 == 0])
  print([x for x in a if x > 3])
  print(filter(lambda el: el == 5, a))
  print(map(lambda el: el * -1, a))
    
  a.append(7)
  print
(a)
    
  a.pop()
  print(a)
    
  print([1] * 5)


# Задание:
# Напишите функцию, которая будет определять является ли переданное в нее число - палиндромом.
# Палиндром - число, буквосочетание, слово или текст, одинаково читающееся в обоих направлениях. 

def is_palindrom(value):
  pass

assert is_palindrom(1221)
assert is_palindrom(13231)
assert not is_palindrom(123)


# Поиск уникальных элементов в строке
Этот фрагмент можно использовать для поиска уникальных элементов в строке с помощью свойства, что все элементы в наборе уникальны.
my_string = "bbbssswwewqeqw123xxxxx"

# преобразование строки в набор
temp_set = set(my_string)

# сшивание набора в строку с помощью join
new_string = ''.join(temp_set)

print(new_string)

# Разбиение строки на список подстрок
string = "My name is Chaitanya Baweja"
разделитель по умолчанию ' '
print(string.split())
# ['My', 'name', 'is', 'Chaitanya', 'Baweja']


# Функция enumerate для получения пар индекс-значение
Следующий скрипт использует функцию enumerate для перебора значений в списке вместе с их индексами.
my_list = ['a', 'b', 'c', 'd', 'e']

for index, value in enumerate(my_list):
    print('{0}: {1}'.format(index, value))

# 0: a
# 1: b
# 2: c
# 3: d
# 4: e
